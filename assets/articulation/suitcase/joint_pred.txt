from articulate_anything.api.odio_urdf import *


def partnet_101050(input_dir, links):
    """
    No. masked_links: 5
    Robot Link Summary:
    - base
    - handle
    - wheel
    - wheel_2
    - suitcase_body

    Object: a suitcase with wheels and a handle
    """
    pred_robot = Robot(input_dir=input_dir, name="suitcase")
    pred_robot.add_link(links['base'])
    pred_robot.add_link(links['suitcase_body'])
    pred_robot.add_joint(Joint("base_to_suitcase_body",
                         Parent("base"),
                         Child("suitcase_body"),
                         type="fixed"),
                         )
    pred_robot.add_link(links['handle'])
    pred_robot.place_relative_to('handle', 'suitcase_body',
                                 placement="above",
                                 clearance=0.0)

    pred_robot.add_link(links['wheel'])
    pred_robot.place_relative_to('wheel', 'suitcase_body',
                                 placement="below",
                                 clearance=0.0)

    pred_robot.add_link(links['wheel_2'])
    pred_robot.place_relative_to('wheel_2', 'suitcase_body',
                                 placement="below",
                                 clearance=0.0)

    # ====================JOINT PREDICTION====================
    bb = pred_robot.get_bounding_boxes(["handle"], include_dim=True)["handle"]
    bb_dim = bb[1]  # length of the handle. bb: [x, y, z]
    # the handle starts at the extended position
    # per the link placement code, the handle is correctly `above` the suitcase_body
    # fully extended.

    # Moving the suitcase down involves moving the handle down by its length along the z-axis
    lower_point = [
        0,
        0,
        -bb_dim["height"],
    ]  # the handle is fully retracted. At the same pos (hide in the box) ## TUNABLE
    # this handle moves along z-axis
    upper_point = [
        0,
        0,
        0,
    ]  # the handle is fully extended. At the same pos as the handle_height ## TUNABLE
    pred_robot.make_prismatic_joint(
        "handle", "suitcase_body", lower_point, upper_point)

    return pred_robot